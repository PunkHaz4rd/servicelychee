{"version":3,"sources":["lib/database.ts"],"names":[],"mappings":"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","file":"database.js","sourcesContent":["import { PlumFacade, ValidationPlumError } from \"microplum\";\r\nimport { Document, Model } from \"mongoose\";\r\nimport * as flat from \"flat\";\r\n\r\n\r\nclass DocumentFacade<T extends Document> extends PlumFacade {\r\n    constructor(public DbModel: Model<T>, act?: (args: any) => Promise<any>, args?: { [key: string]: any }) {\r\n        super(act, args);\r\n    }\r\n\r\n    protected async _callSync(id: string, data: { [key: string]: any } = {}, current?: { [key: string]: any }): Promise<any> {\r\n        // empty no sync by default\r\n        return Promise.resolve();\r\n    }\r\n\r\n    protected async _sync(model: T, current?: { [key: string]: any }): Promise<any> {\r\n        if (this._hasSync() && !model[\"_sync\"]) {\r\n            let error = await model.validate();\r\n            if (error) {\r\n                console.log(`[Validation ERR] DB validation <= ${JSON.stringify(error)}`);\r\n                throw new ValidationPlumError({}, \"Db validation errors\");\r\n            }\r\n            let data: any = (model && model.toObject) ? model.toObject() : {};\r\n            return this._callSync(model._id, data, current);\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n\r\n    protected _hasSync(): boolean {\r\n        return !this.args.noSync && this.DbModel.schema[\"paths\"][\"_sync\"];\r\n    }\r\n\r\n    protected _doSync(update: { [key: string]: any }): boolean {\r\n        return this._hasSync() && Object.keys(update)\r\n                .filter(key => !key.startsWith(\"_\") || key === \"_deactivated\")\r\n                .length > 0;\r\n    }\r\n\r\n    protected _name(): string {\r\n        return this.args.role;\r\n    }\r\n\r\n    protected prepareInputForWriting(input: { [key: string]: any }): void {\r\n        input._modified = Date.now();\r\n        if (this._doSync(input)) {\r\n            input._sync = (this.args.syncId) ? this.args.syncId : null;\r\n            input._link = (this.args.linkId) ? this.args.linkId : null;\r\n        } else {\r\n            this.args.noSync = true;\r\n        }\r\n    }\r\n\r\n    public async create(input: { [key: string]: any }): Promise<T> {\r\n        input._sync = (this.args.syncId) ? this.args.syncId : null;\r\n        let model = new this.DbModel(input);\r\n        let remoteData = await this._sync(model, null);\r\n        if (remoteData) {\r\n            let flattenData: any = flat.flatten(remoteData);\r\n            for(let [key, value] of Object.entries(flattenData)) {\r\n                model.set(key, value);\r\n            }\r\n            //model.set(remoteData);\r\n        }\r\n        return model.save();\r\n    }\r\n\r\n    protected async _update(model: T, update: { [key: string]: any }): Promise<T> {\r\n        if (model) {\r\n            let current = (model && model.toObject) ? model.toObject() : {};\r\n            for(let [key, value] of Object.entries(flat.flatten(update))) {\r\n                model.set(key, value);\r\n            }\r\n            if (model.isModified()) {\r\n                let remoteData = await this._sync(model, current);\r\n                if (remoteData) {\r\n                    let flattenData: any = flat.flatten(remoteData);\r\n                    for (let [key, value] of Object.entries(flattenData)) {\r\n                        model.set(key, value);\r\n                    }\r\n                }\r\n\r\n                return model.save();\r\n            } else {\r\n                return Promise.resolve(model);\r\n            }\r\n        } else {\r\n            return this.create(update);\r\n        }\r\n    }\r\n\r\n    public async update(conditions: { [key: string]: any }, update: { [key: string]: any }): Promise<T[]> {\r\n        this.prepareInputForWriting(update);\r\n        let models: T[] = await this.find(conditions);\r\n        return Promise.all(models.map(async model => this._update(model, update)));\r\n    }\r\n\r\n    public async updateOne(conditions: { [key: string]: any }, update: { [key: string]: any }): Promise<T> {\r\n        this.prepareInputForWriting(update);\r\n        let model: T = await this.findOne(conditions);\r\n        return this._update(model, update);\r\n    }\r\n\r\n    public async updateById(id: string, update: { [key: string]: any }): Promise<T> {\r\n        this.prepareInputForWriting(update);\r\n        let model = await this.findById(id);\r\n        return this._update(model, update);\r\n    }\r\n\r\n    public async find(query: { [key: string]: any } = {}): Promise<T[]> { // returns [] of not found\r\n        let limit: number = null;\r\n        let skip: number = null;\r\n        let sort = null;\r\n        let select = null;\r\n\r\n        query._deactivated = null;\r\n\r\n        if (query.hasOwnProperty('$limit')) {\r\n          limit = query.$limit;\r\n          delete query['$limit'];\r\n        }\r\n        if (query.hasOwnProperty('$skip')) {\r\n          skip = query.$skip;\r\n          delete query['$skip'];\r\n        }\r\n        if (query.hasOwnProperty('$sort')) {\r\n          sort = query.$sort;\r\n          delete query['$sort'];\r\n        }\r\n        if (query.hasOwnProperty('$select')) {\r\n          select = query.$select;\r\n          delete query['$select'];\r\n        }\r\n        let result = this.DbModel.find(query)\r\n\r\n        if (sort) {\r\n          result = result.sort(sort)\r\n        }\r\n        if (select) {\r\n          result = result.select(select)\r\n        }\r\n        if (skip) {\r\n          result = result.skip(skip)\r\n        }\r\n        if (limit) {\r\n          result = result.limit(limit)\r\n        }\r\n        return result.exec();\r\n    }\r\n\r\n    public async findOne(query: { [key: string]: any } = {}): Promise<T> { // returns null if not found\r\n\r\n        let sort = null;\r\n        let select = null;\r\n\r\n        query._deactivated = null;\r\n        if (query.hasOwnProperty('$sort')) {\r\n          sort = query.$sort;\r\n          delete query['$sort'];\r\n        }\r\n        if (query.hasOwnProperty('$select')) {\r\n          select = query.$select;\r\n          delete query['$select'];\r\n        }\r\n        let result = this.DbModel.findOne(query)\r\n        if (sort) {\r\n          result = result.sort(sort)\r\n        }\r\n        if (select) {\r\n          result = result.select(select)\r\n        }\r\n        return result.exec();\r\n    }\r\n\r\n    public async findById(id: string): Promise<T> {\r\n        return this.DbModel\r\n            .findById(id)\r\n            .exec()\r\n            .then(doc => (doc && !doc[\"_deactivated\"]) ? doc : null);\r\n    }\r\n\r\n    public async remove(conditions: { [key: string]: any } = {}): Promise<T[]> {\r\n        return this.update(conditions, {\r\n            _deactivated: Date.now(),\r\n            _sync: (this.args.syncId) ? this.args.syncId : null\r\n        });\r\n        //return this.DbModel\r\n        //    .findByIdAndRemove(id)\r\n        //    .exec();\r\n    }\r\n\r\n    public async removeOne(conditions: { [key: string]: any } = {}): Promise<T> {\r\n        return this.updateOne(conditions, {\r\n            _deactivated: Date.now(),\r\n            _sync: (this.args.syncId) ? this.args.syncId : null\r\n        });\r\n        //return this.DbModel\r\n        //    .findByIdAndRemove(id)\r\n        //    .exec();\r\n    }\r\n\r\n    public async removeById(id: string): Promise<T> {\r\n        return this.updateById(id, {\r\n            _deactivated: Date.now(),\r\n            _sync: (this.args.syncId) ? this.args.syncId : null\r\n        });\r\n        //return this.DbModel\r\n        //    .findByIdAndRemove(id)\r\n        //    .exec();\r\n    }\r\n\r\n    public async count(query: { [key: string]: any } = {}): Promise<number> { // returns [] of not found\r\n        query._deactivated = null;\r\n        return this.DbModel.count(query);\r\n    }\r\n\r\n}\r\n\r\nexport class DatabaseFacade<T> extends DocumentFacade<T & Document> {\r\n\r\n}\r\n"]}